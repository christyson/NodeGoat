pipeline {
  agent {
    docker {
      //image 'node:8.16.0'
      //image 'node:latest'
      image 'ubuntu:latest'
    }
  }
  stages {
    stage('Build') {
      steps {
        //sh 'rm -rf node_modules && npm install && npm audit fix --force'
        //          export SRCCLR_SCM_URI=https://nodegoat_ado
        //sh 'apt update && apt-get install zip unzip -y && apt install python3-pip -y && npm install && rm -rf node_modules && zip -r nodegoat.zip *'
        sh 'npm install && rm -rf node_modules && zip -r nodegoat.zip *'
      }
    }
    stage('SCA SC') {
      steps {
        withCredentials([string(credentialsId: 'SRCCLR_API_TOKEN', variable: 'SRCCLR_API_TOKEN')]) {
          sh '''
            curl -sSL https://download.sourceclear.com/ci.sh | sh
          '''
        }
      }
    }
    stage('Veracode Sast') {
      // upload and scan
      steps {
        withCredentials([usernamePassword(credentialsId: 'Veracode', passwordVariable: 'VERACODEKEY', usernameVariable: 'VERACODEID')]) {
          veracode applicationName: '$JOB_NAME', canFailJob: false, createProfile: true, criticality: 'High', fileNamePattern: '', replacementPattern: '', sandboxName: '', scanExcludesPattern: '', scanIncludesPattern: '', scanName: "$BUILD_NUMBER", teams: '', timeout: 60, uploadExcludesPattern: '', uploadIncludesPattern: '**/**.zip', vid: VERACODEID, vkey: VERACODEKEY
        }
      }
    }
  }
}
